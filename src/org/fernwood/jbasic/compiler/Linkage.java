/*
 * THIS SOURCE FILE IS PART OF JBASIC, AN OPEN SOURCE PUBLICLY AVAILABLE
 * JAVA SOFTWARE PACKAGE HOSTED BY SOURCEFORGE.NET
 * 
 * THIS SOFTWARE IS PROVIDED VIA THE GNU PUBLIC LICENSE AND IS FREELY
 * AVAILABLE FOR ANY PURPOSE COMMERCIAL OR OTHERWISE AS LONG AS THE AUTHORSHIP
 * AND COPYRIGHT INFORMATION IS RETAINED INTACT AND APPROPRIATELY VISIBLE
 * TO THE END USER.
 * 
 * SEE THE PROJECT FILE AT HTTP://WWW.SOURCEFORGE.NET/PROJECTS/JBASIC FOR
 * MORE INFORMATION.
 * 
 * COPYRIGHT 2003-2011 BY TOM COLE, TOMCOLE@USERS.SF.NET
 *
 */
package org.fernwood.jbasic.compiler;

/**
 * This class is used to define an object which records the relationship between
 * byteCode locations and statement ID's an labels. 
 * <p>
 * 
 * A Linkage object is used to create
 * linkage maps for transfer operations within bytecode streams, and also
 * resolve statement labels. These objects are created at link time as the
 * byteCode is scanned and assembled into a single stream for the program. The
 * Linkage objects are stored in a HashMap by the linker for symbol table
 * lookups.
 * 
 * @author tom
 * @version 1.0 Feb 12, 2006
 * 
 */
public class Linkage {

	/**
	 * This is the prefix added to any label name for an internal
	 * entry point in a program; i.e a SUB subroutine, for example.
	 */
	public static final String ENTRY_PREFIX = "__$ENTRY$_";

	/**
	 * @param ix	The statement id that this links to
	 * @param address The bytecode address of the label
	 * @param statementLabel The text of the label
	 */
	public Linkage(int ix, int address, String statementLabel) {
		label = statementLabel;
		id = ix;
		byteAddress = address;
	}

	/**
	 * Generic constructor.
	 *
	 */
	public Linkage() {
		label = null;
		id = 0;
		byteAddress = 0;
	}
	/**
	 * Create a Linkage object when the label and address are
	 * already known.
	 * @param key the target label for the Linkage object
	 * @param addr the bytecode address associated with the linkage
	 */
	public Linkage(String key, int addr) {
		label = key;
		id = 0;
		byteAddress = addr;
	}
	/**
	 * The statement label for which we are tracking the generated code
	 * location.
	 */
	public String label;

	/**
	 * The statement id of the statement containing the label.
	 */
	public int id;

	/**
	 * The address in the generated bytecode that this label points to.
	 */
	public int byteAddress;

}
